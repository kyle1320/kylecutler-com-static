var options={mutation_rate:0.05,breed_percent:0.1,top_percent:0.01,population:1000,layers:[10,10],};window.onload=function(){var k=$("draw-canvas");var a=k.getContext("2d");var g=$("net-canvas");var l=g.getContext("2d");var o=true;var p=true;var j;var h;var n;var d={pauseBtn:$("pause"),evolveBtn:$("evolve"),resetBtn:$("reset"),};var m={generation:$("generation"),bestfit:$("bestfit"),diversity:$("diversity"),};function q(){scaleCanvas(k,a);scaleCanvas(g,l);fitElement(k);fitElement(g);d.pauseBtn.addEventListener("click",function(){f(!o)});d.evolveBtn.addEventListener("click",function(){b(!p)});d.resetBtn.addEventListener("click",e);window.addEventListener("keydown",function(r){if(!p){n.keyPressed(r)}});e();b(true);f(false)}function e(){n=new FlappyGame();h=new NeuralSim(options.population,Infinity,function(r){n.run(r)},n.num_inputs,options.layers,n.num_outputs)}function c(){if(p){h.advance()}else{n.update(h.bestnet)}m.generation.innerHTML=h.gen_num+" / "+h.n_gens;m.bestfit.innerHTML=""+h.bestfit;m.diversity.innerHTML=""+(h.bestfit-h.worstfit)/h.bestfit;if(!o){setTimeout(c,10)}}function i(){if(h.bestnet){h.bestnet.draw(g,l)}n.draw(k,a,h)}function b(r){p=r;if(!r){console.log(h.bestnet)}d.evolveBtn.innerHTML=p?"Watch":"Evolve"}function f(r){if(r&&!o){o=r;clearInterval(j)}else{if(!r&&o){o=r;j=setInterval(i,15);c()}}d.pauseBtn.innerHTML=o?"Resume":"Pause"}q()};